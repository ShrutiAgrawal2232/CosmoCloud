import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import { useState } from "react";
import Input from './Input';


type FormObject = {
  type: string;
  value: string;
  isRequired: boolean;
  child: FormObject[];
}
export default function Home() {
  const [formValues, setFormValues] = useState<FormObject[]>([]);
  const handleDeleteField = (e: any, index: number) => {
    const values = [...formValues];
    values.splice(index, 1);
    setFormValues(values);
  };
  const handleValueChange = (e: any, index: number) => {
    const values = [...formValues];
    values[index].value = e.target.value;
    setFormValues(values);
  };

  const handleTypeChange = (e: any, index: number) => {
    const values = [...formValues];
    values[index].type = e.target.value;
    setFormValues(values);
  };

  const handleIsRequiredChange = (e: any, index: number) => {
    const values = [...formValues];
    values[index].isRequired = e.target.checked;
    setFormValues(values);
  };

  const handleAddChildField = (e: any, index: number) => {
    const values = [...formValues];
    values[index].child.push({
      type: "text",
      value: "",
      child: [],
      isRequired: false,
    });;
    setFormValues(values);
  };

  const handleAddField = (e: any) => {
    e.preventDefault();
    const values = [...formValues];
    values.push({
      type: "text",
      value: "",
      child: [],
      isRequired: false,
    });
    setFormValues(values);

  };

  const handleForm = (ev: any) => {
    ev.preventDefault();
    let myForm = ev.target;
    let fd = new FormData(myForm);
    let obj = {};
    for (let key of Array.from(fd.keys())) {
      obj[key] = fd.get(key);
    }
    console.log(JSON.stringify(obj));
  }
  return (
    <>
      <Head>
        <title>CosmoCloud App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.center}>
          <form action="#" id="myForm" className={styles.container} onSubmit={(e) => handleForm(e)}>
            <fieldset>
              Field name and type
              <button className="add-btn" onClick={handleAddField}>
                Add new
              </button>
              {formValues.map((obj, index) => (
                <Input
                  key={index}
                  objValue={obj}
                  onChange={handleValueChange}
                  index={index}
                  deleteField={handleDeleteField}
                  handleTypeChange={handleTypeChange}
                  handleIsRequiredChange={handleIsRequiredChange}
                  handleAddChildField={handleAddChildField}
                />
              ))}
              <div className={styles.formBox}>
                <button id="btnSubmit" type='submit'>Save</button>
              </div>
            </fieldset>
          </form>
        </div>
      </main>
    </>
  )
}
